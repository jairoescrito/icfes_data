# Verificación de missing values
estudiantes.isna().sum()
##
# Revisión de los datos de edades
round(estudiantes.Edad.describe(),2)
##
# Librerías de Python
import pandas as pd # manipulación de DataFrames
from datetime import datetime # manejo de fechas
from dateutil.relativedelta import relativedelta # Cálculos con fechas
import plotly.express as px # Gráficos
import plotly.offline as py
from shiny import ui, render, App # Creación de shinyapps
# Carga archivos de icfes
#colegios = pd.read_csv('Dataset/colegios.csv',sep =',',low_memory=False)
estudiantes = pd.read_csv('Dataset/estudiantes.csv',sep =',',low_memory=False)
#estudio = pd.read_csv('Dataset/estudio.csv',sep =',',low_memory=False)
#resultados = pd.read_csv('Dataset/resultados.csv',sep =',',low_memory=False)
#socieconomico = pd.read_csv('Dataset/socioeconomico.csv',sep =',',low_memory=False)
ubicacion = pd.read_csv('Dataset/ubicacion.csv',sep =',',low_memory=False)
# Trabajo con el dataset de estudiantes
# Modificación del tipo de identificación para facilitar su entendimiento
estudiantes.Tipo_Documento = estudiantes.Tipo_Documento.replace(['CC', 'CE', 'CR', 'PC', 'PE', 'TI','NES', 'PEP', 'RC', 'CCB','NIP', 'NUIP', 'V'],
["Cedula_Ciudadania","Cedula_Extranjeria","Otro","Otro","Otro","Tarjeta_Identidad","Otro","Permiso_Esp_Permanencia","Registro_Civil","Otro","Numero_Id_Personal","Numero_Unico_Id_Personal","Otro"])
head = estudiantes.head(10)
print(estudiantes.info())
# Inclusión fechas de presentación de las pruebas
periodos = estudiantes.Periodo.unique().tolist() # Crear una lista de los periodos de presentación de las pruebas
fechas = ['07/11/2020','11/08/2019','10/03/2019','25/02/2018','12/08/2018','18/10/2020'] # Fechas de presentación de la prueba por periodo consultadas en internet
cortes = pd.DataFrame({'Periodo':periodos, 'Fecha_Prueba':fechas}) # Data frame que relaciona las fechas con los periodos
estudiantes = pd.merge(estudiantes,cortes,on='Periodo',how='left') # Incluir en el dataset de estudiantes la fecha de presentación de examen
# Calculo de edades de los estudiantes al momento de presentación de la prueba
estudiantes.Fecha_Nacimiento = pd.DataFrame(datetime.strptime(x, "%d/%m/%Y") for x in estudiantes.Fecha_Nacimiento) # Convertir fecha a datetime
estudiantes.Fecha_Prueba = pd.DataFrame(datetime.strptime(x,"%d/%m/%Y") for x in estudiantes.Fecha_Prueba) # Convertir a fecha datetime
estudiantes['Edad'] = pd.DataFrame(relativedelta(estudiantes.Fecha_Prueba[i],estudiantes.Fecha_Nacimiento[i]).years for i in range(len(estudiantes))) # Calculo de la edad
# Revisión del tipos de datos luego de los primeros ajustes
head = estudiantes.head(10)
print(estudiantes.info())
del(cortes,fechas,periodos) # Eliminar variables temporales
# Verificación de missing values
estudiantes.isna().sum()
##
# Revisión de los datos de edades
round(estudiantes.Edad.describe(),2)
##
